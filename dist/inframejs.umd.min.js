/*! 
   name: iframeBridge
   version: 1.1.2
   file: inframejs.min.js
   author: web.szy
   buildTime: 2022/2/17 下午1:51:36
 */
(function(n,h){typeof exports=="object"&&typeof module!="undefined"?module.exports=h():typeof define=="function"&&define.amd?define(h):(n=typeof globalThis!="undefined"?globalThis:n||self,n.inframejs=h())})(this,function(){"use strict";const n="1.1.2";return class{constructor({target:e,whiteList:s,libName:t,debug:i,isSubPage:o,isNewWindow:r}={}){return this.setTarget(e),this.setLibName(t),typeof s!="undefined"&&!Array.isArray(s)?(console.warn("whiteList must be a domain Array"),!1):(this.isNewWindow=r,this.whiteList=(s||[]).filter(a=>typeof a=="string").map(a=>a.toLowerCase()),this.debug=!!i,this.isSubPage=typeof o=="undefined"?!0:o,this.isConneted=this.isSubPage,this.version=n,this.handlersMap=new Map,this.emitCache=[],window?(window.getInframeInstace=()=>this,window.addEventListener("message",this.handleEvent.bind(this)),this.isSubPage?(this.emit("connected","sub Page connected"),console.log("sub instance",this)):this.on("connected",()=>{this.isConneted=!0,this.emitCache.forEach(({eventName:a,data:d})=>this.emit(a,d)),this.emitCache=[]}),this):(console.warn("inframe bridge must init on the browser"),!1))}setTarget(e){typeof e=="string"?this.target=document.querySelector(e):typeof e!="undefined"?this.target=e:this.target=null}setLibName(e){this.libName=e||"inframe"}on(e,s){if(this.logger(`${e} has been watched`),this.handlersMap.has(e)){const t=this.handlersMap.get(e);t.push(s),this.handlersMap.set(e,t)}else this.handlersMap.set(e,[s])}off(e){this.handlersMap.has(e)&&this.handlersMap.delete(e)}emit(e,s){const t={event:e,params:s,lib:this.libName,isSubPage:this.isSubPage};this.logger(`${e} has been emit::${JSON.stringify(t)}`);try{this.isConneted?this.isSubPage?this.isNewWindow?window.opener.postMessage(t,"*"):window.parent.postMessage(t,"*"):this.isNewWindow?this.target.postMessage(t,"*"):this.target.contentWindow.postMessage(t,"*"):this.emitCache.push({eventName:e,data:s})}catch(i){this.logger(i.message),this.destroy()}}handleEvent(e){if(!e||typeof e.data!="object"||!(e.data.lib&&e.data.lib===this.libName)||this.isSubPage===e.data.isSubPage)return;if(this.whiteList.length&&!this.whiteList.some(i=>i.indexOf(e.origin)>-1)){console.warn("you are not access to inframe");return}const{data:s}=e;this.handlersMap.has(s.event)?(this.logger(`received data: ${JSON.stringify(s)}`),this.handlersMap.get(s.event).forEach(i=>i(s))):this.logger(`handlers not find: ${JSON.stringify(s)}`)}destroy(){this.handlersMap.clear(),window.getInframeInstace=null,window.removeEventListener("message",this.handleEvent)}logger(e){if(!this.debug)return;const s=new Date,t=`${s.getHours()}:${s.getMinutes()}:${s.getSeconds()}`,i=this.isSubPage?"\u5B50\u9875\u9762":"\u4E3B\u9875\u9762";console.log(`${t}-${i}::${e}`)}}});
