/*! 
   name: iframeBridge
   version: 1.0.5
   file: inframejs.min.js
   author: web.szy
   buildTime: 2022/2/15 下午7:55:31
 */
(function(i,a){typeof exports=="object"&&typeof module!="undefined"?module.exports=a():typeof define=="function"&&define.amd?define(a):(i=typeof globalThis!="undefined"?globalThis:i||self,i.inframejs=a())})(this,function(){"use strict";const i="1.0.5";return class{constructor({target:e,whiteList:t,libName:s,debug:n,opener:r}={}){return this.setTargetIframe(e),this.setLibName(s),typeof t!="undefined"&&!Array.isArray(t)?(console.warn("whiteList must be a Array"),!1):(this.whiteList=t||[],this.debug=!!n,this.opener=r,this.version=i,this.handlersMap=new Map,window?(window.getInframeInstace=()=>this,window.addEventListener("message",this.handleEvent.bind(this)),this.targetIframe?this.on("connected",o=>console.log(o)):(console.log("sub instance",this),this.emit("connected","sub Page connected")),this):(console.warn("inframe bridge must init on the browser"),!1))}setTargetIframe(e){typeof e=="string"?(this.targetIframe=document.querySelector(e),this.pageName="main"):typeof e!="undefined"?(this.targetIframe=e,this.pageName="main"):(this.targetIframe=null,this.pageName="sub")}setLibName(e){this.libName=e||"inframe"}on(e,t){if(this.logger(`${e} has been watched`),this.handlersMap.has(e)){const s=this.handlersMap.get(e);s.push(t),this.handlersMap.set(e,s)}else this.handlersMap.set(e,[t])}off(e){this.handlersMap.has(e)&&this.handlersMap.delete(e)}emit(e,t){const s={event:e,params:t,lib:this.libName,pageName:this.pageName};this.logger(`${e} has been emitted::${JSON.stringify(s)}`),this.targetIframe?this.opener?this.targetIframe.opener.postMessage(s,"*"):this.targetIframe.contentWindow.postMessage(s,"*"):window.parent.postMessage(s,"*")}handleEvent(e){if(!e||typeof e.data!="object"||!(e.data.lib&&e.data.lib===this.libName)||this.pageName===e.data.pageName)return;if(this.whiteList.length&&!this.whiteList.some(n=>~n.indexOf(e.origin))){console.warn("you are not access to inframe");return}const{data:t}=e;this.handlersMap.has(t.event)?(this.logger(`received data: ${JSON.stringify(t)}`),this.handlersMap.get(t.event).forEach(n=>n(t))):this.logger(`handlers not find: ${JSON.stringify(t)}`)}destroy(){this.handlersMap.clear(),window.getInframeInstace=null,window.removeEventListener("message",this.handleEvent)}logger(e){if(!this.debug)return;const t=new Date,s=`${t.getHours()}:${t.getMinutes()}:${t.getSeconds()}`;console.log(`${s}-${this.pageName}::${e}`)}}});
